Docker:


docker build -t task1:frontend -f Docker_image_frontend .
docker build -t task2:frontend -f Docker_filename_frontend .
docker build -t webapp:db -f Docker_maindb .

Create Webservice
docker network create appNetwork


#RUNNING DB 
#RUNNING 2 FRONT END
docker run --name mywebdb  --network appNetwork webapp:db
docker run --name fe -p 5000:8083 -e DB_HOST=mywebdb --network appNetwork task1:frontend
docker run --name fe2 -p 5001:8081 -e DB_HOST=mywebdb --network appNetwork task2:frontend




K8s

Minikube start 

kubectl apply -f webapp_configmap.yml
kubectl apply -f web_db_deployment.yml
kubectl apply -f image_deploy_k8s.yml




#GCP:
Export PROJECT_ID = ac295artsearch
//retag
 change to your image id!

docker image tag 2aaed1f70b81 gcr.io/${PROJECT_ID}/task1:frontend
docker image tag 8c85bd87bdd0 gcr.io/${PROJECT_ID}/webapp:db 


docker push gcr.io/${PROJECT_ID}/webapp:db 
docker push gcr.io/${PROJECT_ID}/task1:frontend


Append node
gcloud container clusters create artsearch-cluster --num-nodes 2

kubectl apply -f webapp_configmap.yml
kubectl apply -f web_db_gcp.yml
kubectl apply -f image_deploy_gcp.yml

